name: Docker Build ARM64 Template

# Controls when the action will run. 
on:
  push:
    branches: [ '*' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
          
      - name: Setup node
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12
      
      - name: NPM Private Registry
        uses: teveltech/npm-auth-action@master
        with:
          npm_auth: ${{ secrets.NPM_AUTH }}
          npm_email: ${{ secrets.NPM_EMAIL }}
          npm_registry: ${{ secrets.NPM_REGISTRY }}
      
      - name: handle version update
        uses: teveltech/github-tag-action@master
        id: semantic
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: jfrog.local:8081
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          tags: jfrog.local:8081/reg/< namespace >/${{ github.event.repository.name }}:${{ steps.semantic.outputs.new_tag }}
          platforms: linux/arm64
        
      - name: Create a GitHub release
        if: ${{ steps.semantic.outputs.prerelease != 'true' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semantic.outputs.new_tag }}
          release_name: Release ${{ steps.semantic.outputs.new_tag }}
          body: |
            Docker pull command:
            <pre><code> docker pull jfrog.local:8081/reg/< namespace >/${{ github.event.repository.name }}:${{ steps.semantic.outputs.new_tag }} </code></pre> 
            ${{ steps.semantic.outputs.changelog }}