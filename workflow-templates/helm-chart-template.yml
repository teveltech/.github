# This is a basic workflow to help you get started with Actions

name: Helm create chart

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '*' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      
      - uses: azure/setup-helm@v1
        with:
          version: '3.5.2'
      
      - name: handle version update
        uses: teveltech/github-tag-action@master
        id: semantic
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: Override version in Chart.yaml
        uses: teveltech/version-action@master
        with:
          new_version: ${{ steps.semantic.outputs.new_tag }}
      
      - name: Deps update helm
        run: helm dependency update
        shell: bash
      
      - name: Package helm chart
        run: helm package .
        shell: bash
      
      - name: Push chart to registry
        run: curl -v -u ${{ secrets.CHART_REGISTRY_USER }}:${{ secrets.CHART_REGISTRY_PASSWORD }} --upload-file *.tgz -X PUT ${{ secrets.CHART_REGISTRY_URL }}
          
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: ${{ steps.semantic.outputs.prerelease }}
          tag_name: ${{ steps.semantic.outputs.new_tag }}
          release_name: Release ${{ steps.semantic.outputs.new_tag }}
          body: |
            ${{ steps.semantic.outputs.changelog }}
