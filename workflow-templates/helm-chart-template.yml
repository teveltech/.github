name: Helm create chart

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '*' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  version:
    # The type of runner that the job will run on
    runs-on: self-hosted
    container: jfrog.local:8081/reg/base/base-ci:master-AMD64

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0                # fetch the whole repo history
          persist-credentials: false

      - name: Handle version update
        uses: teveltech/github-tag-action@annotated-tag
        id: semantic
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: Check new version
        run: |
          echo "Branch name: ${GITHUB_REF#refs/heads/}"
          echo "Pre-release: ${{ steps.semantic.outputs.prerelease }}"
          echo "Workflow was triggered from ${{ github.event_name }}"
          echo "Previous annotated tag: ${{ steps.semantic.outputs.previous_tag }}"
          echo "Previous lightweight tag: ${{ steps.semantic.outputs.previous_light_tag }}"
          if [ -z "${{ steps.semantic.outputs.new_tag }}" ]; then
            echo "::error::No version bump - no new tag or release will be created. Usually means the workflow was triggered manually or a new branch was created without any changes."
          else
            echo "New tag: ${{ steps.semantic.outputs.new_tag }}"
          fi

    outputs:
      new_tag: ${{ steps.semantic.outputs.new_tag }}
      new_version: ${{ steps.semantic.outputs.new_version }}
      changelog: ${{ steps.semantic.outputs.changelog }}
      previous_tag: ${{ steps.semantic.outputs.previous_tag }}
      prerelease: ${{ steps.semantic.outputs.prerelease }}
      previous_light_tag: ${{ steps.semantic.outputs.previous_light_tag }}

  Build:
    needs: version
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2.3.4
      
      - uses: azure/setup-helm@v1
        with:
          version: '3.5.2'

      - name: Override version in Chart.yaml
        uses: teveltech/version-action@master
        with:
          new_version: ${{ needs.version.outputs.new_tag }}
      
      - name: Deps update helm
        run: helm dependency update
        shell: bash
      
      - name: Package helm chart
        run: helm package .
        shell: bash
      
      - name: Push chart to registry
        run: curl -v -u ${{ secrets.CHART_REGISTRY_USER }}:${{ secrets.CHART_REGISTRY_PASSWORD }} --upload-file *.tgz -X PUT ${{ secrets.CHART_REGISTRY_URL }}

  Github_Tag_and_Release:
    needs: [version, Build]
    runs-on: self-hosted
    container: jfrog.local:8081/reg/base/base-ci:master-AMD64
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: git config
        run: |
          git config user.email "Tevel GitHub Runner"
          git config user.name "Tevel GitHub Runner"
          
      # note: adding a message would create an annotated tag
      - name: Create Lightweight Tag
        if: ${{ needs.version.outputs.new_tag && needs.version.outputs.prerelease == 'true' }}
        run: |
          git tag ${{ needs.version.outputs.new_tag }}
          git push --force origin ${{ needs.version.outputs.new_tag }}
          echo "New lightweight tag: https://github.com/teveltech/${{ github.event.repository.name }}/releases/tag/${{ needs.version.outputs.new_tag }}"
          
      - name: Create Annotated Tag
        if: ${{ needs.version.outputs.new_tag && needs.version.outputs.prerelease == 'false' }}
        run: |
          git tag -a ${{ needs.version.outputs.new_tag }} -m "${{ github.event.head_commit.message }}" 
          git push --force origin ${{needs.version.outputs.new_tag }}
          echo "New annotated tag: https://github.com/teveltech/${{ github.event.repository.name }}/releases/tag/${{ needs.version.outputs.new_tag }}"
          
      - name: Create a GitHub release
        id: release
        if: ${{ needs.version.outputs.new_tag }}
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: ${{ needs.version.outputs.prerelease }}
          tag_name: ${{ needs.version.outputs.new_tag }}
          name: Release ${{ needs.version.outputs.new_tag }}
          body: |
            ${{ needs.version.outputs.changelog }}

      - name: set warning
        shell: bash
        run: |
          STRING="New release: ${{ steps.release.outputs.url }}
          STRING="${STRING//'%'/'%25'}"
          STRING="${STRING//$'\n'/'%0A'}"
          STRING="${STRING//$'\r'/'%0D'}"
          echo "::warning::$STRING"
