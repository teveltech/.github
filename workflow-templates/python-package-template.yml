# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Python Package Template

# Controls when the action will run. 
on:
  push:
    branches: [ '*' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    container: jfrog.local:8081/reg/base/base-full:master-AMD64

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}   # checkout the correct branch name
        fetch-depth: 0                # fetch the whole repo history
    
    - name: handle version update
      uses: teveltech/github-tag-action@master
      id: semantic
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dry_run: true
        
    - name: Override version in setup.py
      uses: teveltech/version-action@master
      with:
        new_version: ${{ steps.semantic.outputs.new_tag }}
    
    - name: Link pypi config directory and .pypirc to github home /github/home
      run: ln -s /root/.pypirc $HOME/.pypirc && ln -s /root/.pip $HOME/.pip
    
    - name: Install dependencies needed to upload
      run: |
        pip2 install setuptools wheel twine
        pip3 install setuptools wheel twine
      
    - name: Install dependencies needed to build
      run: |
        if [ -f requirements.txt ]; then pip2 install -r requirements.txt; fi
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
    - name: Build and publish
      run: |
        python2 setup.py bdist_wheel upload -r local
        python3 setup.py bdist_wheel upload -r local
    - name: Create a GitHub release
      if: ${{ steps.semantic.outputs.new_tag }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: ${{ steps.semantic.outputs.prerelease }}
        tag_name: ${{ steps.semantic.outputs.new_tag }}
        release_name: Release ${{ steps.semantic.outputs.new_tag }}
        body: ${{ steps.semantic.outputs.changelog }}
